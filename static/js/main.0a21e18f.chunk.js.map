{"version":3,"sources":["App.js","index.js"],"names":["App","arrD","arrN","addNumbers","display","document","querySelector","displayW","push","parseFloat","value","splice","length","join","subtractNumbers","multiplyNumber","divideNumber","EqualTo","working","solution","eval","solutionS","toFixed","solutionA","split","includes","reset","addpoint","span","innerHTML","scrollLeft","deleteprev","OldN","pop","presentN","addRminus","unshift","joined","shift","normal","input","style","fontSize","querySelectorAll","forEach","x","addEventListener","toNumber","useEffect","id","setTimeout","clearTimeout","className","type","readOnly","title","onClick","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"qNAAA,+gBAGA,SAASA,MACP,IAAIC,KAAO,GACPC,KAAO,GAEX,SAASC,aACP,IAAIC,EAAUC,SAASC,cAAc,YACjCC,EAAWF,SAASC,cAAc,aAGtCJ,KAAKM,KAAKC,WAAWL,EAAQM,QAG7BN,EAAQM,MAAQ,IAOhBT,KAAKO,KAAKN,KAAK,GAAI,KAInBA,KAAKS,OAAO,EAAGT,KAAKU,QAMpBL,EAASG,MAAQT,KAAKY,KAAK,IAC5B,CAED,SAASC,kBACP,IAAIV,EAAUC,SAASC,cAAc,YACjCC,EAAWF,SAASC,cAAc,aAGtCJ,KAAKM,KAAKC,WAAWL,EAAQM,QAG7BN,EAAQM,MAAQ,IAOhBT,KAAKO,KAAKN,KAAK,GAAI,KAInBA,KAAKS,OAAO,EAAGT,KAAKU,QAMpBL,EAASG,MAAQT,KAAKY,KAAK,IAC5B,CAED,SAASE,iBACP,IAAIX,EAAUC,SAASC,cAAc,YACjCC,EAAWF,SAASC,cAAc,aAGtCJ,KAAKM,KAAKC,WAAWL,EAAQM,QAG7BN,EAAQM,MAAQ,IAMhBT,KAAKO,KAAKN,KAAK,GAAI,KAGnBA,KAAKS,OAAO,EAAGT,KAAKU,QAMpBL,EAASG,MAAQT,KAAKY,KAAK,IAC5B,CAED,SAASG,eACP,IAAIZ,EAAUC,SAASC,cAAc,YACjCC,EAAWF,SAASC,cAAc,aAGtCJ,KAAKM,KAAKC,WAAWL,EAAQM,QAG7BN,EAAQM,MAAQ,IAMhBT,KAAKO,KAAKN,KAAK,GAAI,KAGnBA,KAAKS,OAAO,EAAGT,KAAKU,QAMpBL,EAASG,MAAQT,KAAKY,KAAK,IAC5B,CAED,SAASI,UACP,IAAIb,QAAUC,SAASC,cAAc,YACjCC,SAAWF,SAASC,cAAc,aAOtCL,KAAKO,KAAKC,WAAWL,QAAQM,QAG7B,IAAIQ,QAAUjB,KAAKY,KAAK,KAGxBN,SAASG,MAAQQ,QAGjB,IAAIC,SAAWC,KAAKF,SAGhBG,UAAYF,SAASG,QAAQ,GAG7BC,UAAY,UAAGJ,UAAWK,MAAM,IAQhC,UAAGL,UAAWP,OAAS,IAAMW,UAAUE,SAAS,KAClDrB,QAAQM,MAAQW,UAEhBjB,QAAQM,MAAQS,SAIlBlB,KAAKU,OAAO,EAAGV,KAAKW,OACrB,CAED,SAASc,QACP,IAAItB,EAAUC,SAASC,cAAc,YACjCC,EAAWF,SAASC,cAAc,aAGtCF,EAAQM,MAAQ,IAGhBH,EAASG,MAAQ,GAGjBT,KAAKU,OAAO,EAAGV,KAAKW,OACrB,CAED,SAASe,WACP,IAAIvB,EAAUC,SAASC,cAAc,YAEjCsB,EADQvB,SAASC,cAAc,UAClBA,cAAc,QAChBF,EAAQM,MAAMc,MAAM,IAOrBC,SAAS,OACrBrB,EAAQM,MAAQN,EAAQM,MAAQkB,EAAKC,UACrCzB,EAAQ0B,YAAc,GAEzB,CAED,SAASC,aACP,IAAI3B,EAAUC,SAASC,cAAc,YAIjC0B,EAAO5B,EAAQM,MAAMc,MAAM,IAG/BQ,EAAKC,MAGL,IAAIC,EAAWF,EAAKnB,KAAK,IAGzBT,EAAQM,MAAQwB,GASZF,EAAKpB,OAAS,GAEPoB,EAAKpB,OAAS,GAAiB,MAAZoB,EAAK,IAExBA,EAAKpB,OAAS,GAAiB,MAAZoB,EAAK,MAHjC5B,EAAQM,MAAQ,IAMnB,CAED,SAASyB,YACP,IAAI/B,EAAUC,SAASC,cAAc,YACjC4B,EAAW9B,EAAQM,MAAMc,MAAM,IAcnC,GAAsB,MAAlBpB,EAAQM,OAAiC,MAAhBwB,EAAS,IAA8B,MAAhBA,EAAS,GAAY,CACvEA,EAASE,QAAQ,KACjB,IAAIC,EAASH,EAASrB,KAAK,IAC3BT,EAAQM,MAAQ2B,CACjB,MAAM,GAAoB,MAAhBH,EAAS,GAAY,CAC9BA,EAASI,QACT,IAAIC,EAASL,EAASrB,KAAK,IAC3BT,EAAQM,MAAQ6B,CACjB,CACF,CAED,SAASC,QACP,IAAIpC,EAAUC,SAASC,cAAc,YACrCF,EAAQqC,MAAMC,SAAW,WAGfrC,SAASsC,iBAAiB,WAGhCC,SAAQ,SAACC,GAEXA,EAAEC,iBAAiB,SAAS,WAC1B,IAEIC,EAFOF,EAAEvC,cAAc,QAEPuB,UAIE,MAAlBzB,EAAQM,MACVN,EAAQM,MAAQD,WAAW,KAAOA,WAAWsC,GAI7C3C,EAAQM,MAAQN,EAAQM,MAAQqC,EAI9B3C,EAAQM,MAAME,OAAS,KACzBR,EAAQ0B,YAAc,GAEzB,GACF,GACF,CAcD,OAVAkB,sDAAU,WACR,IAAIC,EAAKC,YAAW,WAClBV,OACD,GAAE,KAGH,OAAO,kBAAMW,aAAaF,EAAnB,CACR,IAIC,oEAAMG,UAAU,mBAAhB,UACE,oEAAOC,KAAM,OAAQ3C,MAAO,IAAK0C,UAAU,UAAUE,UAAQ,IAC7D,oEAAOD,KAAM,OAAQD,UAAW,WAAYE,UAAQ,IACpD,uEAASF,UAAU,OAAnB,UACE,uEAASA,UAAU,OAAnB,UACE,qEAAQA,UAAU,iBAAiBG,MAAM,aAAzC,SACE,oFAEF,qEAAQH,UAAU,iBAAiBG,MAAM,aAAzC,SACE,oFAEF,qEAAQH,UAAU,mBAAmBG,MAAM,eAA3C,SACE,oFAEF,qEACEH,UAAU,gBACVG,MAAM,gBACNC,QAASrB,UAHX,SAKE,sFAEF,qEAAQiB,UAAU,YAAYG,MAAM,QAAQC,QAAS9B,MAArD,SACE,wFAIJ,uEAAS0B,UAAU,OAAnB,UACE,qEAAQA,UAAU,kBAAkBG,MAAM,cAA1C,SACE,oFAEF,qEAAQH,UAAU,kBAAkBG,MAAM,cAA1C,SACE,oFAEF,qEAAQH,UAAU,iBAAiBG,MAAM,aAAzC,SACE,oFAEF,qEACEH,UAAU,UACVG,MAAM,gBACNC,QAASrD,WAHX,SAKE,oFAEF,qEACEiD,UAAU,YACVG,MAAM,mBACNC,QAAS1C,gBAHX,SAKE,uFAIJ,uEAASsC,UAAU,OAAnB,UACE,qEAAQA,UAAU,mBAAmBG,MAAM,eAA3C,SACE,oFAEF,qEAAQH,UAAU,mBAAmBG,MAAM,eAA3C,SACE,oFAEF,qEAAQH,UAAU,kBAAkBG,MAAM,cAA1C,SACE,oFAEF,qEACEH,UAAU,eACVG,MAAM,gBACNC,QAASzC,eAHX,SAKE,oFAEF,qEACEqC,UAAU,aACVG,MAAM,cACNC,QAASxC,aAHX,SAKE,uFAIJ,uEAASoC,UAAU,OAAnB,UACE,qEAAQA,UAAU,kBAAkBG,MAAM,OAA1C,SACE,oFAEF,qEAAQH,UAAU,qBAAqBG,MAAM,aAA7C,SACE,qFAEF,qEAAQH,UAAU,gBAAgBG,MAAM,QAAQC,QAAS7B,SAAzD,SACE,oFAEF,qEAAQyB,UAAU,YAAYG,MAAM,gBAAgBC,QAASvC,QAA7D,SACE,oFAEF,qEAAQmC,UAAU,aAAaG,MAAM,YAAYC,QAASzB,WAA1D,SACE,8FAMX,CAEc/B,yB,iCCzYf,iEAKAyD,IAASC,WAAWrD,SAASsD,eAAe,SAASC,OACnD,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,M","file":"static/js/main.0a21e18f.chunk.js","sourcesContent":["import { useEffect } from \"react\"; //Get useEffect hook...\nimport \"./App.css\"; //Stylesheet\n\nfunction App() {\n  let arrD = []; //Create an empty array\n  let arrN = []; //Create an empty array\n\n  function addNumbers() {\n    let display = document.querySelector(\".display\");\n    let displayW = document.querySelector(\".displayW\");\n\n    //Get value and turn it to a float then push into empty array - 'arrN'\n    arrN.push(parseFloat(display.value));\n\n    //After pushing then set the value to 0\n    display.value = \"0\";\n\n    /**\n     * Push the value in arrN into an empty array called - arrD.\n     * Indicate the action (addition).\n     */\n\n    arrD.push(arrN[0], \"+\");\n\n    //Clean up the array - arrN\n\n    arrN.splice(0, arrN.length);\n\n    /**\n     * From arrD, get the inputs and join them with one space between them.\n     * Display the value to the section 'displayW' while waiting for other input.\n     */\n    displayW.value = arrD.join(\" \");\n  }\n\n  function subtractNumbers() {\n    let display = document.querySelector(\".display\");\n    let displayW = document.querySelector(\".displayW\");\n\n    //Get value and turn it to a float then push into empty array - 'arrN'\n    arrN.push(parseFloat(display.value));\n\n    //After pushing then set the value to 0\n    display.value = \"0\";\n\n    /**\n     * Push the value in arrN into an empty array called - arrD.\n     * Indicate the action (subtraction).\n     */\n\n    arrD.push(arrN[0], \"-\");\n\n    //Clean up the array - arrN\n\n    arrN.splice(0, arrN.length);\n\n    /**\n     * From arrD, get the inputs and join them with one space between them.\n     * Display the value to the section 'displayW' while waiting for other input.\n     */\n    displayW.value = arrD.join(\" \");\n  }\n\n  function multiplyNumber() {\n    let display = document.querySelector(\".display\");\n    let displayW = document.querySelector(\".displayW\");\n\n    //Get value and turn it to a float then push into empty array - 'arrN'\n    arrN.push(parseFloat(display.value));\n\n    //After pushing then set the value to 0\n    display.value = \"0\";\n\n    /**\n     * Push the value in arrN into an empty array called - arrD.\n     * Indicate the action (multiplication).\n     */\n    arrD.push(arrN[0], \"*\");\n\n    //Clean up the array - arrN\n    arrN.splice(0, arrN.length);\n\n    /**\n     * From arrD, get the inputs and join them with one space between them.\n     * Display the value to the section 'displayW' while waiting for other input.\n     */\n    displayW.value = arrD.join(\" \");\n  }\n\n  function divideNumber() {\n    let display = document.querySelector(\".display\");\n    let displayW = document.querySelector(\".displayW\");\n\n    //Get value and turn it to a float then push into empty array - 'arrN'\n    arrN.push(parseFloat(display.value));\n\n    //After pushing then set the value to 0\n    display.value = \"0\";\n\n    /**\n     * Push the value in arrN into an empty array called - arrD.\n     * Indicate the action (division).\n     */\n    arrD.push(arrN[0], \"/\");\n\n    //Clean up the array - arrN\n    arrN.splice(0, arrN.length);\n\n    /**\n     * From arrD, get the inputs and join them with one space between them.\n     * Display the value to the section 'displayW' while waiting for other input.\n     */\n    displayW.value = arrD.join(\" \");\n  }\n\n  function EqualTo() {\n    let display = document.querySelector(\".display\");\n    let displayW = document.querySelector(\".displayW\");\n\n    //\n    /**\n     * Get new value and turn it to a float.\n     * Then input it into the array containing the operation - 'arrD'\n     */\n    arrD.push(parseFloat(display.value));\n\n    //Get the values in arrD, join them with a space and store in a new variable.\n    let working = arrD.join(\" \");\n\n    //Set the value (string) in the displayW section.\n    displayW.value = working;\n\n    //Set the solution of the statement in 'working' to a Javascript valid code.\n    let solution = eval(working);\n\n    //Create new variable and set the solution to 5 decimal place.\n    let solutionS = solution.toFixed(5);\n\n    //Create new variable, split the solution into 1 charcters in an array.\n    let solutionA = `${solution}`.split(\"\");\n\n    /**\n     * IF var (solution's length) is greater than 10 and\n     * var (solutionA[an array] includes '.') to indicate it is a decimal number\n     * THEN set display value to a number of 5 d.p.\n     * ELSE set display value to the number gotten.\n     */\n    if (`${solution}`.length > 10 && solutionA.includes(\".\")) {\n      display.value = solutionS;\n    } else {\n      display.value = solution;\n    }\n\n    //Clean up the array - arrD\n    arrD.splice(0, arrD.length);\n  }\n\n  function reset() {\n    let display = document.querySelector(\".display\");\n    let displayW = document.querySelector(\".displayW\");\n\n    //Set display value to '0' initial state.\n    display.value = \"0\";\n\n    //Set displayW empty\n    displayW.value = \"\";\n\n    //Clean up the array - arrD\n    arrD.splice(0, arrD.length);\n  }\n\n  function addpoint() {\n    let display = document.querySelector(\".display\");\n    let point = document.querySelector(\".point\");\n    let span = point.querySelector(\"span\");\n    let presentN = display.value.split(\"\");\n\n    /**\n     * IF the var present of type array does not includes '.'\n     * Set display value to - display value + point btn clicked.\n     * and if the number overflow, auto scroll-left by 30.\n     */\n    if (!presentN.includes(\".\")) {\n      display.value = display.value + span.innerHTML;\n      display.scrollLeft += 30;\n    }\n  }\n\n  function deleteprev() {\n    let display = document.querySelector(\".display\");\n\n    //Set new variable and\n    //make it an array containing the present display value in one just one characters per element.\n    let OldN = display.value.split(\"\");\n\n    //Kick out the last one character of the display value\n    OldN.pop();\n\n    //Set the Var New value (presentN) to store the new characters in array (OldN).\n    let presentN = OldN.join(\"\");\n\n    //Render the new value into display section.\n    display.value = presentN;\n\n    /**\n     * While deleting....\n     * Set display to initial state '0'...\n     * IF the OldN array length is less than 1.\n     * Else IF OldN array length is < 2 and (OldN array index 0 element) is 'minus'\n     * Else IF OldN array length is < 3 and (OldN array index 1 element) is 'a point'\n     */\n    if (OldN.length < 1) {\n      display.value = \"0\";\n    } else if (OldN.length < 2 && OldN[0] === \"-\") {\n      display.value = \"0\";\n    } else if (OldN.length < 3 && OldN[1] === \".\") {\n      display.value = \"0\";\n    }\n  }\n\n  function addRminus() {\n    let display = document.querySelector(\".display\");\n    let presentN = display.value.split(\"\");\n\n    /**\n     * Get the present number in display value, split into an array of one characters\n     * Then.\n     * IF the display section value is not equal to '0' and\n     * the element of index 0 in the array presentN is not '+' nor '-'\n     *\n     * Then add a new character ('-') in the index (0) of the array presentN,..\n     * join the characters in presentN and display the value.\n     *\n     * Else if the character ('-') is in index 0 of the presentN...\n     * remove the index 0 of presentN i.e the '-'.\n     */\n    if (display.value !== \"0\" && presentN[0] !== \"+\" && presentN[0] !== \"-\") {\n      presentN.unshift(\"-\");\n      let joined = presentN.join(\"\");\n      display.value = joined;\n    } else if (presentN[0] === \"-\") {\n      presentN.shift();\n      let normal = presentN.join(\"\");\n      display.value = normal;\n    }\n  }\n\n  function input() {\n    let display = document.querySelector(\".display\");\n    display.style.fontSize = \"xx-large\"; //Set display value font size to xx-large\n\n    //Get all btn labeled with the className = 'number'.\n    let btn = document.querySelectorAll(\".number\");\n\n    //Get each button in btn to work on each.\n    btn.forEach((x) => {\n      //Set an event to each buttons under btn.\n      x.addEventListener(\"click\", () => {\n        let span = x.querySelector(\"span\");\n\n        let toNumber = span.innerHTML;\n\n        //IF display section value is at the initial state '0'\n        //Set the value as 0 + the button value clicked number.\n        if (display.value === \"0\") {\n          display.value = parseFloat(\"0\") + parseFloat(toNumber);\n        }\n        //Else just set the present display value + the button value clicked number.\n        else {\n          display.value = display.value + toNumber;\n        }\n\n        //IF the display value length overflows, set auto scroll left by 30.\n        if (display.value.length > 14) {\n          display.scrollLeft += 50;\n        }\n      });\n    });\n  }\n\n  //Set an effect to render later, which takes a timeout of 100milliseconds after page loading\n  //Then render the function called input().\n  useEffect(() => {\n    let id = setTimeout(() => {\n      input();\n    }, 100);\n\n    //Clear the timeout after the rendering the function.\n    return () => clearTimeout(id);\n  });\n\n  //Return to the screen a simple calculator.\n  return (\n    <main className=\"calculatorDesign\">\n      <input type={\"text\"} value={\"0\"} className=\"display\" readOnly />\n      <input type={\"text\"} className={\"displayW\"} readOnly />\n      <section className=\"btns\">\n        <section className=\"btnC\">\n          <button className=\"btn one number\" title=\"Number One\">\n            <span>1</span>\n          </button>\n          <button className=\"btn two number\" title=\"Number Two\">\n            <span>2</span>\n          </button>\n          <button className=\"btn three number\" title=\"Number Three\">\n            <span>3</span>\n          </button>\n          <button\n            className=\"btn addRminus\"\n            title=\"Plus or Minus\"\n            onClick={addRminus}\n          >\n            <span>+/-</span>\n          </button>\n          <button className=\"btn reset\" title=\"Clear\" onClick={reset}>\n            <span>AC</span>\n          </button>\n        </section>\n\n        <section className=\"btnC\">\n          <button className=\"btn four number\" title=\"Number Four\">\n            <span>4</span>\n          </button>\n          <button className=\"btn five number\" title=\"Number Five\">\n            <span>5</span>\n          </button>\n          <button className=\"btn six number\" title=\"Number Six\">\n            <span>6</span>\n          </button>\n          <button\n            className=\"btn add\"\n            title=\"Addition sign\"\n            onClick={addNumbers}\n          >\n            <span>+</span>\n          </button>\n          <button\n            className=\"btn minus\"\n            title=\"Subtraction sign\"\n            onClick={subtractNumbers}\n          >\n            <span>-</span>\n          </button>\n        </section>\n\n        <section className=\"btnC\">\n          <button className=\"btn seven number\" title=\"Number Seven\">\n            <span>7</span>\n          </button>\n          <button className=\"btn eigth number\" title=\"Number Eight\">\n            <span>8</span>\n          </button>\n          <button className=\"btn nine number\" title=\"Number Nine\">\n            <span>9</span>\n          </button>\n          <button\n            className=\"btn multiply\"\n            title=\"Multiply sign\"\n            onClick={multiplyNumber}\n          >\n            <span>*</span>\n          </button>\n          <button\n            className=\"btn divide\"\n            title=\"Divide sign\"\n            onClick={divideNumber}\n          >\n            <span>/</span>\n          </button>\n        </section>\n\n        <section className=\"btnC\">\n          <button className=\"btn zero number\" title=\"Zero\">\n            <span>0</span>\n          </button>\n          <button className=\"btn twozero number\" title=\"Two zeroes\">\n            <span>00</span>\n          </button>\n          <button className=\"btn dot point\" title=\"Point\" onClick={addpoint}>\n            <span>.</span>\n          </button>\n          <button className=\"btn equal\" title=\"Equal to sign\" onClick={EqualTo}>\n            <span>=</span>\n          </button>\n          <button className=\"btn delete\" title=\"Backspace\" onClick={deleteprev}>\n            <span>DEL</span>\n          </button>\n        </section>\n      </section>\n    </main>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.createRoot(document.getElementById(\"root\")).render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}